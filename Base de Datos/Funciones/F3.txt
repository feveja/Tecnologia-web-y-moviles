--- Q1
-- select receta.runpaciente as Run_Paciente, paciente.nombre as Nombre_Paciente,
-- medico.run as Run_Medico, medico.nombre as Nombre_Medico, receta.fecha as Fecha_Receta, 
-- farmacia.nombre as Nombre_Farmacia, contiene.nombrecomermed as Nombre_Medicamento, existeen.preciomed as Precio_Medicamento
-- from receta, contiene, farmacia, existeen, paciente, medico
-- where (receta.runpaciente=paciente.run)
-- and (paciente.runmedico=medico.run)
-- and (receta.codigo = contiene.codigoreceta) 
-- and (existeen.nombrecomermed = contiene.nombrecomermed)
-- and (farmacia.codigo = existeen.codigofarmacia);

CREATE OR REPLACE FUNCTION consulta1
	(OUT Run_Paciente receta.runpaciente%type, 
   OUT Nombre_Paciente paciente.nombre%type, 
   OUT Run_Medico medico.run%type,
   OUT Nombre_Medico medico.nombre%type,
   OUT Fecha_Receta receta.fecha%type,
   OUT Nombre_Farmacia farmacia.nombre%type,
   OUT Nombre_Medicamento contiene.nombrecomermed%type,
   OUT Precio_Medicamento existeen.preciomed%type) 
  RETURNS setof record AS
	$$
  BEGIN
		RETURN QUERY select receta.runpaciente, paciente.nombre,
								 medico.run, medico.nombre, receta.fecha, 
								 farmacia.nombre, contiene.nombrecomermed, existeen.preciomed
								 from receta, contiene, farmacia, existeen, paciente, medico
								 where (receta.runpaciente=paciente.run)
								 and (paciente.runmedico=medico.run)
								 and (receta.codigo = contiene.codigoreceta) 
								 and (existeen.nombrecomermed = contiene.nombrecomermed)
								 and (farmacia.codigo = existeen.codigofarmacia);
    RETURN;
  END;
  $$
LANGUAGE PLPGSQL;

--- Q2
-- select pa.run, pa.nombre, pa.apellido, es.nombre, count(*) as atenciones
-- from paciente pa, medico me, posee po, especialidad es
-- where 
-- es.nombre=po.nombreespecialidad 
-- and me.run=po.runmedico
-- and pa.runmedico=me.run
-- group by pa.run, pa.nombre, pa.apellido, es.nombre;

CREATE OR REPLACE FUNCTION consulta2
	(OUT Run_Paciente paciente.run%type, 
   OUT Nombre_Paciente paciente.nombre%type, 
   OUT Apellido_Paciente paciente.apellido%type,
   OUT Nombre_Especialidad especialidad.nombre%type,
   OUT Atenciones bigint)
  RETURNS setof record AS
	$$
  BEGIN
		RETURN QUERY select paciente.run, paciente.nombre, paciente.apellido, especialidad.nombre, count(*) as atenciones
								 from paciente , medico, posee, especialidad
								 where 
								 especialidad.nombre=posee.nombreespecialidad 
								 and medico.run=posee.runmedico
								 and paciente.runmedico=medico.run
								 group by paciente.run, paciente.nombre, paciente.apellido, especialidad.nombre;
    RETURN;
  END;
  $$
LANGUAGE PLPGSQL;

--- Q3
--muestra contratos vigentes
-- create or replace view Contratos_Vigentes as
-- select con.codigofarmacia, ef.codigo as codigofarmaceutica, con.codigocontrato
-- from farmacia f, empresafarmaceutica ef, contrato con
-- where con.codigoefarmaceutica=ef.codigo and con.codigofarmacia=f.codigo and (con.fechatermino>=CURRENT_DATE);

--- muestra farmacias con contratos no vigentes
-- select f.codigo, f.nombre, f.direccion, f.telefono
-- from farmacia f, medicamento med, existeen ex, empresafarmaceutica ef
-- where f.codigo NOT IN (select cv.codigofarmacia from Contratos_Vigentes cv) 
-- and f.codigo=ex.codigofarmacia
-- and ex.nombrecomermed=med.nombrecomercial
-- and med.codigoefarmaceutica=ef.codigo;

-- convertiremos tambien la vista auxiliar en una funcion
CREATE OR REPLACE FUNCTION vista_auxiliar
	(OUT codigofarmacia contrato.codigofarmacia%type, 
   OUT codigofarmaceutica empresafarmaceutica.codigo%type, 
   OUT codigocontrato contrato.codigocontrato%type)
  RETURNS setof record AS
	$$
  BEGIN
		RETURN QUERY select contrato.codigofarmacia, empresafarmaceutica.codigo, contrato.codigocontrato
								 from farmacia, empresafarmaceutica, contrato
								 where contrato.codigoefarmaceutica=empresafarmaceutica.codigo and contrato.codigofarmacia=farmacia.codigo and (contrato.fechatermino>=CURRENT_DATE);
    RETURN;
  END;
  $$
LANGUAGE PLPGSQL;

CREATE OR REPLACE FUNCTION consulta3
	(OUT Codigo_Farmacia farmacia.codigo%type, 
   OUT Nombre_Farmacia farmacia.nombre%type, 
   OUT Direccion_Farmacia farmacia.direccion%type,
   OUT Telefono_Farmacia farmacia.telefono%type)
  RETURNS setof record AS
	$$
  BEGIN
		RETURN QUERY select farmacia.codigo, farmacia.nombre, farmacia.direccion, farmacia.telefono
								 from farmacia, medicamento, existeen, empresafarmaceutica
								 where farmacia.codigo NOT IN (select codigofarmacia from vista_auxiliar()) 
								 and farmacia.codigo=existeen.codigofarmacia
								 and existeen.nombrecomermed=medicamento.nombrecomercial
								 and medicamento.codigoefarmaceutica=empresafarmaceutica.codigo;
    RETURN;
  END;
  $$
LANGUAGE PLPGSQL;

-- --- Q4
-- select sup.nombre as nombre_supervisor, f.nombre as nombre_farmacia, ef.nombre as nombre_empresa_farmaceutica, count(*) as veces_supervisado
-- from supervisor sup, farmacia f, empresafarmaceutica ef, contrato con, fechasup fsup
-- where sup.run = fsup.runsupervisor and fsup.runsupervisor=con.runsupervisor and
-- con.codigofarmacia=f.codigo and con.codigoefarmaceutica=ef.codigo
-- group by nombre_supervisor, nombre_farmacia, nombre_empresa_farmaceutica
-- order by nombre_supervisor;

CREATE OR REPLACE FUNCTION consulta4
	(OUT nombre_supervisor supervisor.nombre%type, 
   OUT nombre_farmacia farmacia.nombre%type, 
   OUT nombre_empresa_farmaceutica empresafarmaceutica.nombre%type,
   OUT veces_supervisado bigint)
  RETURNS setof record AS
	$$
  BEGIN
		RETURN QUERY select supervisor.nombre, farmacia.nombre, empresafarmaceutica.nombre, count(*) as veces_supervisado
								 from supervisor, farmacia, empresafarmaceutica, contrato, fechasup
								 where supervisor.run = fechasup.runsupervisor and fechasup.runsupervisor=contrato.runsupervisor and
								 contrato.codigofarmacia=farmacia.codigo and contrato.codigoefarmaceutica=empresafarmaceutica.codigo
								 group by supervisor.nombre, farmacia.nombre, empresafarmaceutica.nombre
								 order by supervisor.nombre;
    RETURN;
  END;
  $$
LANGUAGE PLPGSQL;

--- Q5
-- select ef.nombre as nombre_empresa_farmaceutica,m.nombrecomercial as nombre_medicamento, count(c.codigoreceta) as cantidad_recetas
-- from medicamento m, empresafarmaceutica ef, contiene c
-- where m.codigoefarmaceutica = ef.codigo and m.nombrecomercial = c.nombrecomermed
-- group by ef.nombre, m.nombrecomercial
-- having count(c.codigoreceta) > 10;

CREATE OR REPLACE FUNCTION consulta5
	(OUT nombre_empresa_farmaceutica empresafarmaceutica.nombre%type, 
   OUT nombre_medicamento medicamento.nombrecomercial%type, 
   OUT cantidad_recetas bigint)
  RETURNS setof record AS
	$$
  BEGIN
		RETURN QUERY select empresafarmaceutica.nombre, medicamento.nombrecomercial, count(contiene.codigoreceta) as cantidad_recetas
					       from medicamento, empresafarmaceutica, contiene
					       where medicamento.codigoefarmaceutica = empresafarmaceutica.codigo and medicamento.nombrecomercial = contiene.nombrecomermed
					       group by empresafarmaceutica.nombre, medicamento.nombrecomercial
					       having count(contiene.codigoreceta) > 10;
    RETURN;
  END;
  $$
LANGUAGE PLPGSQL;

---------VISTAS----------

--- V1
-- create or replace view v1 as
-- select *
-- from medico 
-- where medico.run not in 
-- (select medico.run
-- from medico, receta
-- where medico.run=receta.runmedico and date_part('month',receta.fecha)=date_part('month',now()) and date_part('year',receta.fecha)=date_part('year',now()));

CREATE OR REPLACE FUNCTION vista1
	(OUT run medico.run%type, 
   OUT fechanacimiento medico.fechanacimiento%type, 
   OUT aniosejerciendo medico.aniosejerciendo%type,
   OUT nombre medico.nombre%type,
   OUT apellido medico.apellido%type)
  RETURNS setof record AS
	$$
  BEGIN
		RETURN QUERY select *
					from medico 
					where medico.run not in 
					(select medico.run
					from medico, receta
					where medico.run=receta.runmedico and date_part('month',receta.fecha)=date_part('month',now()) and date_part('year',receta.fecha)=date_part('year',now()));
    RETURN;
  END;
  $$
LANGUAGE PLPGSQL;

-- --- V2
-- create or replace view v2 as
-- select me.run as run_medico, date_part('year',re.fecha) as anio_recetas, count(*) as total_recetas
-- from medico me, receta re
-- where re.runmedico=me.run
-- group by me.run, date_part('year',re.fecha);

CREATE OR REPLACE FUNCTION vista2
	(OUT run_medico medico.run%type, 
   OUT anio_recetas double precision, 
   OUT total_recetas bigint)
  RETURNS setof record AS
	$$
  BEGIN
		RETURN QUERY select medico.run, date_part('year',receta.fecha), count(*) as total_recetas
								 from medico, receta
								 where receta.runmedico=medico.run
								 group by medico.run, date_part('year',receta.fecha);
    RETURN;
  END;
  $$
LANGUAGE PLPGSQL;

--- V3
-- create view v3 as 
-- select p.nombre as nombre_paciente, m.nombre as nombre_medico, r.fecha as anio, count(*) as total_recetas
-- from medico m, receta r, paciente p
-- where m.run = r.runmedico and r.runpaciente = p.run
-- group by p.nombre,m.nombre,r.fecha;

CREATE OR REPLACE FUNCTION vista3
	(OUT nombre_paciente paciente.nombre%type, 
   OUT nombre_medico medico.nombre%type, 
   OUT anio receta.fecha%type,
   OUT total_recetas bigint)
  RETURNS setof record AS
	$$
  BEGIN
		RETURN QUERY select paciente.nombre, medico.nombre, receta.fecha, count(*) as total_recetas
								 from medico, receta, paciente
								 where medico.run = receta.runmedico and receta.runpaciente = paciente.run
								 group by paciente.nombre,medico.nombre,receta.fecha;
    RETURN;
  END;
  $$
LANGUAGE PLPGSQL;